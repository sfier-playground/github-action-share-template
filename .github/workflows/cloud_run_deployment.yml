on:
  workflow_call:
    # secrests:
    #   GCP_PROJECT_ID:
    #     required: true
    #     description: GCP Project ID.    
    #   GCP_REGION:  
    #     required: true
    #     description: GCP Target Region.
    #   GOOGLE_APPLICATION_CREDENTIALS:
    #     required: true
    #     description: GCP Service Account.
    inputs:
      environment: 
        type: string
        required: true
        description: environment name
      service-name:
        type: string
        required: true
        description: application name
      ref:
        type: string
        required: true
        description: git commit
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      # SERVICE_NAME: ${{ inputs.service-name }}
      REGION: ${{ secrets.GCP_REGION }}
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
    steps:
      - name: Build Docker image
        run: |
          docker build -t gcr.io/$PROJECT_ID/${{ inputs.service-name }}:$GITHUB_SHA .
          docker tag gcr.io/$PROJECT_ID/${{ inputs.service-name }}:$GITHUB_SHA gcr.io/$PROJECT_ID/${{ inputs.service-name }}:latest

      - name: Configure Google Cloud CLI
        run: |
          echo $GOOGLE_APPLICATION_CREDENTIALS > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project $PROJECT_ID
          gcloud config set run/region $REGION

      - name: Push Docker image to GCP Container Registry
        run: |
          docker push gcr.io/$PROJECT_ID/${{ inputs.service-name }}:$GITHUB_SHA
          docker push gcr.io/$PROJECT_ID/${{ inputs.service-name }}:latest

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy ${{ inputs.service-name }} \
            --image=gcr.io/$PROJECT_ID/${{ inputs.service-name }}:$GITHUB_SHA \
            --platform=managed \
            --region=$REGION \
            --allow-unauthenticated